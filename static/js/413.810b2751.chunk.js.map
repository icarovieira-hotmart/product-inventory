{"version":3,"file":"static/js/413.810b2751.chunk.js","mappings":"yOAEaA,GAAgBC,EAAAA,EAAAA,IAAG,wKAanBC,GAAkBD,EAAAA,EAAAA,IAAG,8GAUrBE,GAAuBF,EAAAA,EAAAA,IAAG,6K,mLCvBvC,ECOyB,SAAH,GAAyC,IAApCG,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACC,EAAA,EAAI,WACH,SAACC,EAAA,EAAc,CACbC,GAAI,CAAEC,MAAO,IAAKC,OAAO,KACzBC,QAAS,kBAAMP,EAAS,aAAD,OAAcH,GAAK,EAAC,UAE3C,UAACW,EAAA,EAAW,YACV,SAACC,EAAA,EAAU,CAACC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAAK,SAClDd,KAEH,SAACW,EAAA,EAAU,CAACL,GAAI,CAAES,UAAW,QAAUF,QAAQ,QAAQG,MAAM,iBAAgB,SAC1Ef,UAMb,EC3BA,ECOqB,SAAH,GAAgC,IAA1BgB,EAAU,EAAVA,WACtB,OACE,iCACC,SAACN,EAAA,EAAU,CAACL,GAAI,CAAEY,GAAI,GAAKL,QAAQ,KAAKD,cAAY,gCAInD,SAACO,EAAA,GAAI,CACHC,WAAS,EACTC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GACtBC,QAAS,CAAEF,GAAI,EAAGG,GAAI,EAAGF,GAAI,IAAK,SAEjCN,EAAWS,KAAI,SAACC,EAAUC,GAAK,OAC9B,SAACT,EAAA,GAAI,CAACU,MAAI,EAACP,GAAI,EAAGG,GAAI,EAAGF,GAAI,EAAE,UAC7B,SAAC,EAAgB,CACfxB,GAAI4B,EAAS5B,GACbC,KAAM2B,EAAS3B,KACfC,YAAa0B,EAAS1B,eAJW2B,EAK9B,QAKjB,EC9BA,ECKa,WACX,OAAoCE,EAAAA,EAAAA,UAAuC,IAAG,eAAvEb,EAAU,KAAEc,EAAa,KAChC,GAAiCC,EAAAA,EAAAA,GAE9BnC,EAAAA,IAFKoC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAUxB,OANAC,EAAAA,EAAAA,YAAU,WACJD,GACFJ,EAAcI,EAAKE,cAEvB,GAAG,CAACF,IAEDF,GACM,0EAGNC,GACM,8CAGF,SAAC,EAAY,CAACjB,WAAYA,GACnC,C","sources":["graphql/queries.ts","modules/categoryList/components/categoryListItem/index.ts","modules/categoryList/components/categoryListItem/categoryListItem.tsx","modules/categoryList/index.ts","modules/categoryList/categoryList.tsx","pages/home/index.ts","pages/home/home.tsx"],"sourcesContent":["import { gql } from \"@apollo/client\"\n\nexport const LOAD_CATEGORY = gql`\n  query($id: ID!) {\n    Category(id: $id){\n      name,\n      description,\n      Products {\n        id,\n        name\n      }\n    }\n  }\n`\n\nexport const LOAD_CATEGORIES = gql`\n  query {\n    allCategories{\n      id,\n      name,\n      description\n    }\n  }\n`\n\nexport const LOAD_PRODUCT_DETAILS = gql`\n  query($id: ID!) {\n    Product(id: $id){\n      name,\n      description,\n      color,\n      stock,\n      price,\n      category_id\n    }\n  }\n`","import CategoryListItem from './categoryListItem'\n\nexport default CategoryListItem","import { Card, CardActionArea, CardContent, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom'\n\ninterface IProps {\n  id: number,\n  name: string,\n  description: string\n}\n\nconst CategoryListItem = ({id, name, description}: IProps) => {\n  const navigate = useNavigate();\n\n  return (\n    <Card>\n      <CardActionArea \n        sx={{ width: 280, height:140 }}\n        onClick={() => navigate(`/category/${id}`)}\n      >\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {name}\n          </Typography>\n          <Typography sx={{ textAlign: 'left' }} variant=\"body2\" color=\"text.secondary\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  )\n}\n\nexport default CategoryListItem\n","import CategoryList from './categoryList'\n\nexport default CategoryList","import { Grid, Typography } from '@mui/material'\n\nimport { Category } from 'src/graphql/types'\nimport CategoryListItem from './components/categoryListItem'\n\ninterface IProps {\n  categories: Omit<Category, 'Products'>[]\n}\n\nconst CategoryList = ({ categories }: IProps) => {\n  return (\n    <>\n     <Typography sx={{ mt: 5 }} variant=\"h2\" gutterBottom>\n        Categories List\n      </Typography>\n\n      <Grid\n        container\n        spacing={{ xs: 2, md: 3 }}\n        columns={{ xs: 4, sm: 8, md: 12 }}\n      >\n        {categories.map((category, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <CategoryListItem\n              id={category.id}\n              name={category.name}\n              description={category.description}/>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  )\n}\n\nexport default CategoryList","import Home from './home'\n\nexport default Home","import { useEffect, useState } from 'react'\nimport { useQuery } from '@apollo/client'\n\nimport { Category } from 'src/graphql/types'\nimport { LOAD_CATEGORIES } from 'src/graphql/queries'\nimport CategoryList from 'src/modules/categoryList'\n\nconst Home = () => {\n  const [categories, setCategories] = useState<Omit<Category, 'Products'>[]>([])\n  const { error, loading, data } = useQuery<{\n    allCategories: Omit<Category, 'Products'>[]\n  }>(LOAD_CATEGORIES)\n\n  useEffect(() => {\n    if (data) {\n      setCategories(data.allCategories)\n    }\n  }, [data]);\n\n  if(error){\n    return <>Sorry, There was an error to fetch data</>\n  }\n\n  if(loading){\n    return <>Loading...</>\n  }\n\n  return <CategoryList categories={categories}/>\n}\n\nexport default Home"],"names":["LOAD_CATEGORY","gql","LOAD_CATEGORIES","LOAD_PRODUCT_DETAILS","id","name","description","navigate","useNavigate","Card","CardActionArea","sx","width","height","onClick","CardContent","Typography","gutterBottom","variant","component","textAlign","color","categories","mt","Grid","container","spacing","xs","md","columns","sm","map","category","index","item","useState","setCategories","useQuery","error","loading","data","useEffect","allCategories"],"sourceRoot":""}