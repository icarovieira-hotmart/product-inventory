{"version":3,"file":"static/js/677.edea94ec.chunk.js","mappings":"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","sources":["graphql/mutations.ts","graphql/queries.ts","modules/productDetails/components/actions/actions.tsx","modules/productDetails/components/header/header.tsx","modules/productDetails/components/info/info.tsx","modules/productDetails/productDetail.tsx","modules/productDetails/index.ts","pages/product/index.ts","pages/product/product.tsx","../node_modules/@mui/icons-material/AddCircleOutline.js","../node_modules/@mui/icons-material/RemoveCircleOutline.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@apollo/src/react/hooks/useMutation.ts","../node_modules/@apollo/src/react/hooks/useSyncExternalStore.ts","../node_modules/@apollo/src/react/hooks/useQuery.ts"],"sourcesContent":["import { gql} from '@apollo/client'\n\nexport const CREATE_PRODUCT = gql`\n  mutation Mutation(\n    $name: String!\n    $description: String!\n    $color: String!\n    $stock: Int!\n    $price: Float!\n    $category_id: ID!\n  ) {\n    createProduct(\n      name: $name\n      description: $description\n      color: $color\n      stock: $stock\n      price: $price\n      category_id: $category_id\n    ) {\n      id\n      name\n      description\n      color\n      stock\n      price\n      category_id\n    }\n  }\n`\n\nexport const UPDATE_PRODUCT = gql`\n  mutation Mutation(\n    $updateProductId: ID!\n    $name: String\n    $description: String\n    $color: String\n    $stock: Int\n    $price: Float\n    $categoryId: ID\n  ) {\n    updateProduct(\n      id: $updateProductId\n      name: $name\n      description: $description\n      color: $color\n      stock: $stock\n      price: $price\n      category_id: $categoryId\n    ) {\n      name\n      description\n      color\n      stock\n      price\n      category_id\n      id\n    }\n  }\n`\n\nexport const REMOVE_PRODUCT = gql`\n  mutation Mutation($removeProductId: ID!) {\n    removeProduct(id: $removeProductId) {\n      id\n      name\n      description\n      color\n      stock\n      price\n      category_id\n    }\n  }\n`","import { gql } from \"@apollo/client\"\n\nexport const LOAD_CATEGORY = gql`\n  query($id: ID!) {\n    Category(id: $id){\n      name,\n      description,\n      Products {\n        id,\n        name\n      }\n    }\n  }\n`\n\nexport const LOAD_CATEGORIES = gql`\n  query {\n    allCategories{\n      id,\n      name,\n      description\n    }\n  }\n`\n\nexport const LOAD_PRODUCT_DETAILS = gql`\n  query($id: ID!) {\n    Product(id: $id){\n      name,\n      description,\n      color,\n      stock,\n      price,\n      category_id\n    }\n  }\n`","import { Button, IconButton, Stack, Typography } from '@mui/material'\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline'\n\ninterface IProps {\n  updateLoading: boolean,\n  removeLoading: boolean,\n  stock: number,\n  handleIncreaseStock: (stock: number) => void,\n  handleDecreaseStock: (stock: number) => void,\n  handleRemoveProduct: () => void\n}\n\nconst Actions = ({\n  updateLoading,\n  removeLoading,\n  stock,\n  handleIncreaseStock,\n  handleDecreaseStock,\n  handleRemoveProduct\n}: IProps) => {\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      <IconButton \n        aria-label=\"increase\"\n        color=\"primary\"\n        component=\"label\"\n        onClick={() => handleIncreaseStock(stock)}\n      >\n        <AddCircleOutlineIcon />\n      </IconButton>\n\n      <Typography sx={{ textAlign: 'left'}} variant=\"overline\">\n        Stock: {updateLoading ? 'Loading...' : stock}\n      </Typography>\n\n      <IconButton\n        aria-label=\"decrease\"\n        color=\"primary\"\n        disabled={stock === 0}\n        component=\"label\"\n        onClick={() => handleDecreaseStock(stock)}\n      >\n        <RemoveCircleOutlineIcon />\n      </IconButton>\n\n      <Button\n        sx={{ mt: 2 }}\n        disabled={removeLoading}\n        variant=\"contained\"\n        color=\"error\"\n        onClick={() => handleRemoveProduct()}\n      >\n        {removeLoading ? 'Loading...' : 'Remove'}\n      </Button>\n    </Stack>\n  )\n}\n\nexport default Actions","import { useNavigate, useParams } from 'react-router-dom'\nimport { IconButton, Stack, Typography } from '@mui/material'\n\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack'\n\ninterface IProps {\n  name: string\n}\n\nconst Header = ({name}: IProps) => {\n  const { categoryId } = useParams()\n  const navigate = useNavigate()\n\n  return (\n    <Stack\n      sx={{ marginTop: 4, marginBottom: 4}}\n      direction=\"row\"\n      spacing={2}\n      justifyContent=\"center\"\n    >\n      <IconButton\n        aria-label=\"back\"\n        color=\"primary\"\n        component=\"label\"\n        onClick={() => navigate(`/category/${categoryId}`)}\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <Typography sx={{ mt: 5 }} variant=\"h4\">\n        Name:{name}\n      </Typography>\n    </Stack>\n  )\n}\n\nexport default Header","import { Typography } from '@mui/material'\n\ninterface IProps {\n  description: string,\n  color: string,\n  price: number\n}\n\ninterface Item {\n  label: string,\n  value: string | number\n}\n\nconst Info = ({description, color, price}: IProps) => {\n  const Item = ({label, value}: Item) => {\n    return (\n      <Typography sx={{ textAlign: 'left'}} variant=\"body1\" gutterBottom>\n        <b>{label}</b>: {value}\n      </Typography>\n    )\n  }\n  return (\n    <>\n      <Item label=\"Description\" value={description} />\n      <Item label=\"Color\" value={color} />\n      <Item label=\"Price\" value={price} />\n    </>\n  )\n}\n\nexport default Info","import { useEffect, useState } from \"react\";\nimport { useMutation } from '@apollo/client'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { useQuery } from '@apollo/client'\n\nimport { Product } from 'src/graphql/types'\nimport { LOAD_CATEGORY, LOAD_PRODUCT_DETAILS } from 'src/graphql/queries'\nimport { UPDATE_PRODUCT, REMOVE_PRODUCT } from 'src/graphql/mutations'\nimport { Header, Info, Actions } from './components'\n\nconst ProductDetail = () => {\n  const [product, setProduct] = useState<Product>();\n  const navigate = useNavigate()\n  const { categoryId, productId } = useParams()\n  const { error, loading, data, refetch } = useQuery<{\n    Product: Product\n  }>(LOAD_PRODUCT_DETAILS, {\n    variables: {\n      id: productId\n    }\n  })\n\n  useEffect(() => {\n    if (data) {\n      setProduct(data.Product);\n    }\n  }, [data])\n\n  const [updateProduct, { \n    loading: updateLoading\n  }] = useMutation(UPDATE_PRODUCT, {\n    refetchQueries: [{\n      query: LOAD_CATEGORY,\n      variables: {\n        id: categoryId,\n      },\n    }],\n  })\n\n  const [removeProduct, {\n    loading: removeLoading\n  }] = useMutation(REMOVE_PRODUCT, {\n    refetchQueries: [{\n      query: LOAD_CATEGORY,\n      variables: {\n        id: categoryId,\n      },\n    }],\n  })\n\n  const handleIncreaseStock = async (stock: number) => {\n    await updateProduct({\n      variables: {\n        updateProductId: productId,\n        stock: stock + 1 \n      },\n    })\n    refetch()\n  }\n\n  const handleDecreaseStock = async (stock: number) => {\n    if(stock !== 0) {\n      await updateProduct({\n        variables: {\n          updateProductId: productId,\n          stock: stock - 1\n        },\n      })\n      refetch()\n    }\n  }\n\n  const handleRemoveProduct = async () => {\n    await removeProduct({ variables: {\n       removeProductId: productId \n    }})\n    \n    navigate(`/category/${product?.category_id}`)\n  }\n\n  if (error) {\n    return <>Sorry, There was an error to fetch data</>\n  }\n\n  if (loading) {\n    return <>Loading...</>\n  }\n\n  if (product) {\n    const { name, description, color, price, stock } = product\n\n    return (\n      <>\n        <Header name={name}/>\n        <Info\n          description={description}\n          color={color}\n          price={price}\n        />\n        <Actions \n          updateLoading={updateLoading}\n          removeLoading={removeLoading}\n          stock={stock}\n          handleIncreaseStock={handleIncreaseStock}\n          handleDecreaseStock={handleDecreaseStock}\n          handleRemoveProduct={handleRemoveProduct}\n        />\n      </>\n    )\n  }\n\n  return (\n    <>Nothing to be displayed...</>\n  )\n}\n\nexport default ProductDetail","import ProductDetail from \"./productDetail\"\n\nexport default ProductDetail","import Product from './product'\n\nexport default Product","import ProductDetail from 'src/modules/productDetails'\n\nconst Product = () => {\n  return <ProductDetail />\n}\n\nexport default Product","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'AddCircleOutline');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'RemoveCircleOutline');\nexports.default = _default;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport {\n  MutationFunctionOptions,\n  MutationHookOptions,\n  MutationResult,\n  MutationTuple,\n} from '../types/types';\n\nimport {\n  ApolloCache,\n  DefaultContext,\n  mergeOptions,\n  OperationVariables,\n} from '../../core';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { ApolloError } from '../../errors';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useMutation<\n  TData = any,\n  TVariables = OperationVariables,\n  TContext = DefaultContext,\n  TCache extends ApolloCache<any> = ApolloCache<any>,\n>(\n  mutation: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: MutationHookOptions<TData, TVariables, TContext, TCache>,\n): MutationTuple<TData, TVariables, TContext, TCache> {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  const [result, setResult] = useState<Omit<MutationResult, 'reset'>>({\n    called: false,\n    loading: false,\n    client,\n  });\n\n  const ref = useRef({\n    result,\n    mutationId: 0,\n    isMounted: true,\n    client,\n    mutation,\n    options,\n  });\n\n  // TODO: Trying to assign these in a useEffect or useLayoutEffect breaks\n  // higher-order components.\n  {\n    Object.assign(ref.current, { client, options, mutation });\n  }\n\n  const execute = useCallback((\n    executeOptions: MutationFunctionOptions<\n      TData,\n      TVariables,\n      TContext,\n      TCache\n    > = {}\n  ) => {\n    const {client, options, mutation} = ref.current;\n    const baseOptions = { ...options, mutation };\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client,\n      });\n    }\n\n    const mutationId = ++ref.current.mutationId;\n    const clientOptions = mergeOptions(\n      baseOptions,\n      executeOptions as any,\n    );\n\n    return client.mutate(clientOptions).then((response) => {\n      const { data, errors } = response;\n      const error =\n        errors && errors.length > 0\n          ? new ApolloError({ graphQLErrors: errors })\n          : void 0;\n\n      if (\n        mutationId === ref.current.mutationId &&\n        !clientOptions.ignoreResults\n      ) {\n        const result = {\n          called: true,\n          loading: false,\n          data,\n          error,\n          client,\n        };\n\n        if (ref.current.isMounted && !equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n      ref.current.options?.onCompleted?.(response.data!, clientOptions);\n      executeOptions.onCompleted?.(response.data!, clientOptions);\n      return response;\n    }).catch((error) => {\n      if (\n        mutationId === ref.current.mutationId &&\n        ref.current.isMounted\n      ) {\n        const result = {\n          loading: false,\n          error,\n          data: void 0,\n          called: true,\n          client,\n        };\n\n        if (!equal(ref.current.result, result)) {\n          setResult(ref.current.result = result);\n        }\n      }\n\n      if (ref.current.options?.onError || clientOptions.onError) {\n        ref.current.options?.onError?.(error, clientOptions);\n        executeOptions.onError?.(error, clientOptions);\n        // TODO(brian): why are we returning this here???\n        return { data: void 0, errors: error };\n      }\n\n      throw error;\n    });\n  }, []);\n\n  const reset = useCallback(() => {\n    if (ref.current.isMounted) {\n      setResult({ called: false, loading: false, client });\n    }\n  }, []);\n\n  useEffect(() => {\n    ref.current.isMounted = true;\n\n    return () => {\n      ref.current.isMounted = false;\n    };\n  }, []);\n\n  return [execute, { reset, ...result }];\n}\n","import { invariant } from '../../utilities/globals';\nimport * as React from 'react';\n\nimport { canUseLayoutEffect } from '../../utilities';\n\nlet didWarnUncachedGetSnapshot = false;\n\ntype RealUseSESHookType =\n  // This import depends only on the @types/use-sync-external-store package, not\n  // the actual use-sync-external-store package, which is not installed. It\n  // might be nice to get this type from React 18, but it still needs to work\n  // when only React 17 or earlier is installed.\n  typeof import(\"use-sync-external-store\").useSyncExternalStore;\n\n// Prevent webpack from complaining about our feature detection of the\n// useSyncExternalStore property of the React namespace, which is expected not\n// to exist when using React 17 and earlier, and that's fine.\nconst uSESKey = \"useSyncExternalStore\" as keyof typeof React;\nconst realHook = React[uSESKey] as RealUseSESHookType | undefined;\n\n// Adapted from https://www.npmjs.com/package/use-sync-external-store, with\n// Apollo Client deviations called out by \"// DEVIATION ...\" comments.\n\n// When/if React.useSyncExternalStore is defined, delegate fully to it.\nexport const useSyncExternalStore: RealUseSESHookType = realHook || ((\n  subscribe,\n  getSnapshot,\n  getServerSnapshot,\n) => {\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (\n    // DEVIATION: Using our own __DEV__ polyfill (from ../../utilities/globals).\n    __DEV__ &&\n    !didWarnUncachedGetSnapshot &&\n    // DEVIATION: Not using Object.is because we know our snapshots will never\n    // be exotic primitive values like NaN, which is !== itself.\n    value !== getSnapshot()\n  ) {\n    didWarnUncachedGetSnapshot = true;\n    // DEVIATION: Using invariant.error instead of console.error directly.\n    invariant.error(\n      'The result of getSnapshot should be cached to avoid an infinite loop',\n    );\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{inst}, forceUpdate] = React.useState({inst: {value, getSnapshot}});\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  if (canUseLayoutEffect) {\n    // DEVIATION: We avoid calling useLayoutEffect when !canUseLayoutEffect,\n    // which may seem like a conditional hook, but this code ends up behaving\n    // unconditionally (one way or the other) because canUseLayoutEffect is\n    // constant.\n    React.useLayoutEffect(() => {\n      Object.assign(inst, { value, getSnapshot });\n      // Whenever getSnapshot or subscribe changes, we need to check in the\n      // commit phase if there was an interleaved mutation. In concurrent mode\n      // this can happen all the time, but even in synchronous mode, an earlier\n      // effect may have mutated the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({inst});\n      }\n    }, [subscribe, value, getSnapshot]);\n  } else {\n    Object.assign(inst, { value, getSnapshot });\n  }\n\n  React.useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({inst});\n    }\n\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(function handleStoreChange() {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({inst});\n      }\n    });\n  }, [subscribe]);\n\n  return value;\n});\n\nfunction checkIfSnapshotChanged<Snapshot>({\n  value,\n  getSnapshot,\n}: {\n  value: Snapshot;\n  getSnapshot: () => Snapshot;\n}): boolean {\n  try {\n    return value !== getSnapshot();\n  } catch {\n    return true;\n  }\n}\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useSyncExternalStore } from './useSyncExternalStore';\nimport { equal } from '@wry/equality';\n\nimport { mergeOptions, OperationVariables, WatchQueryFetchPolicy } from '../../core';\nimport { ApolloContextValue, getApolloContext } from '../context';\nimport { ApolloError } from '../../errors';\nimport {\n  ApolloClient,\n  ApolloQueryResult,\n  NetworkStatus,\n  ObservableQuery,\n  DocumentNode,\n  TypedDocumentNode,\n  WatchQueryOptions,\n} from '../../core';\nimport {\n  QueryHookOptions,\n  QueryResult,\n  ObservableQueryFields,\n} from '../types/types';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport { useApolloClient } from './useApolloClient';\nimport { canUseWeakMap, canUseWeakSet, compact, isNonEmptyArray, maybeDeepFreeze } from '../../utilities';\n\nconst {\n  prototype: {\n    hasOwnProperty,\n  },\n} = Object;\n\nexport function useQuery<\n  TData = any,\n  TVariables = OperationVariables,\n>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options: QueryHookOptions<TData, TVariables> = Object.create(null),\n): QueryResult<TData, TVariables> {\n  return useInternalState(\n    useApolloClient(options.client),\n    query,\n  ).useQuery(options);\n}\n\nexport function useInternalState<TData, TVariables>(\n  client: ApolloClient<any>,\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n): InternalState<TData, TVariables> {\n  const stateRef = useRef<InternalState<TData, TVariables>>();\n  if (\n    !stateRef.current ||\n    client !== stateRef.current.client ||\n    query !== stateRef.current.query\n  ) {\n    stateRef.current = new InternalState(client, query, stateRef.current);\n  }\n  const state = stateRef.current;\n\n  // By default, InternalState.prototype.forceUpdate is an empty function, but\n  // we replace it here (before anyone has had a chance to see this state yet)\n  // with a function that unconditionally forces an update, using the latest\n  // setTick function. Updating this state by calling state.forceUpdate is the\n  // only way we trigger React component updates (no other useState calls within\n  // the InternalState class).\n  const [_tick, setTick] = useState(0);\n  state.forceUpdate = () => {\n    setTick(tick => tick + 1);\n  };\n\n  return state;\n}\n\nclass InternalState<TData, TVariables> {\n  constructor(\n    public readonly client: ReturnType<typeof useApolloClient>,\n    public readonly query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n    previous?: InternalState<TData, TVariables>,\n  ) {\n    verifyDocumentType(query, DocumentType.Query);\n\n    // Reuse previousData from previous InternalState (if any) to provide\n    // continuity of previousData even if/when the query or client changes.\n    const previousResult = previous && previous.result;\n    const previousData = previousResult && previousResult.data;\n    if (previousData) {\n      this.previousData = previousData;\n    }\n  }\n\n  forceUpdate() {\n    // Replaced (in useInternalState) with a method that triggers an update.\n    invariant.warn(\"Calling default no-op implementation of InternalState#forceUpdate\");\n  }\n\n  asyncUpdate() {\n    return new Promise<QueryResult<TData, TVariables>>(resolve => {\n      this.asyncResolveFns.add(resolve);\n      this.optionsToIgnoreOnce.add(this.watchQueryOptions);\n      this.forceUpdate();\n    });\n  }\n\n  private asyncResolveFns = new Set<\n    (result: QueryResult<TData, TVariables>) => void\n  >();\n\n  private optionsToIgnoreOnce = new (canUseWeakSet ? WeakSet : Set)<\n    WatchQueryOptions<TVariables, TData>\n  >();\n\n  // Methods beginning with use- should be called according to the standard\n  // rules of React hooks: only at the top level of the calling function, and\n  // without any dynamic conditional logic.\n  useQuery(options: QueryHookOptions<TData, TVariables>) {\n    // The renderPromises field gets initialized here in the useQuery method, at\n    // the beginning of everything (for a given component rendering, at least),\n    // so we can safely use this.renderPromises in other/later InternalState\n    // methods without worrying it might be uninitialized. Even after\n    // initialization, this.renderPromises is usually undefined (unless SSR is\n    // happening), but that's fine as long as it has been initialized that way,\n    // rather than left uninitialized.\n    this.renderPromises = useContext(getApolloContext()).renderPromises;\n\n    this.useOptions(options);\n\n    const obsQuery = this.useObservableQuery();\n\n    const result = useSyncExternalStore(\n      useCallback(() => {\n        if (this.renderPromises) {\n          return () => {};\n        }\n\n        const onNext = () => {\n          const previousResult = this.result;\n          // We use `getCurrentResult()` instead of the onNext argument because\n          // the values differ slightly. Specifically, loading results will have\n          // an empty object for data instead of `undefined` for some reason.\n          const result = obsQuery.getCurrentResult();\n          // Make sure we're not attempting to re-render similar results\n          if (\n            previousResult &&\n            previousResult.loading === result.loading &&\n            previousResult.networkStatus === result.networkStatus &&\n            equal(previousResult.data, result.data)\n          ) {\n            return;\n          }\n\n          this.setResult(result);\n        };\n\n        const onError = (error: Error) => {\n          const last = obsQuery[\"last\"];\n          subscription.unsubscribe();\n          // Unfortunately, if `lastError` is set in the current\n          // `observableQuery` when the subscription is re-created,\n          // the subscription will immediately receive the error, which will\n          // cause it to terminate again. To avoid this, we first clear\n          // the last error/result from the `observableQuery` before re-starting\n          // the subscription, and restore it afterwards (so the subscription\n          // has a chance to stay open).\n          try {\n            obsQuery.resetLastResults();\n            subscription = obsQuery.subscribe(onNext, onError);\n          } finally {\n            obsQuery[\"last\"] = last;\n          }\n\n          if (!hasOwnProperty.call(error, 'graphQLErrors')) {\n            // The error is not a GraphQL error\n            throw error;\n          }\n\n          const previousResult = this.result;\n          if (\n            !previousResult ||\n            (previousResult && previousResult.loading) ||\n            !equal(error, previousResult.error)\n          ) {\n            this.setResult({\n              data: (previousResult && previousResult.data) as TData,\n              error: error as ApolloError,\n              loading: false,\n              networkStatus: NetworkStatus.error,\n            });\n          }\n        };\n\n        let subscription = obsQuery.subscribe(onNext, onError);\n\n        return () => subscription.unsubscribe();\n      }, [\n        // We memoize the subscribe function using useCallback and the following\n        // dependency keys, because the subscribe function reference is all that\n        // useSyncExternalStore uses internally as a dependency key for the\n        // useEffect ultimately responsible for the subscription, so we are\n        // effectively passing this dependency array to that useEffect buried\n        // inside useSyncExternalStore, as desired.\n        obsQuery,\n        this.renderPromises,\n        this.client.disableNetworkFetches,\n      ]),\n\n      () => this.getCurrentResult(),\n      () => this.getCurrentResult(),\n    );\n\n    // TODO Remove this method when we remove support for options.partialRefetch.\n    this.unsafeHandlePartialRefetch(result);\n\n    const queryResult = this.toQueryResult(result);\n\n    if (!queryResult.loading && this.asyncResolveFns.size) {\n      this.asyncResolveFns.forEach(resolve => resolve(queryResult));\n      this.asyncResolveFns.clear();\n    }\n\n    return queryResult;\n  }\n\n  // These members (except for renderPromises) are all populated by the\n  // useOptions method, which is called unconditionally at the beginning of the\n  // useQuery method, so we can safely use these members in other/later methods\n  // without worrying they might be uninitialized.\n  private renderPromises: ApolloContextValue[\"renderPromises\"];\n  private queryHookOptions: QueryHookOptions<TData, TVariables>;\n  private watchQueryOptions: WatchQueryOptions<TVariables, TData>;\n\n  private useOptions(\n    options: QueryHookOptions<TData, TVariables>,\n  ) {\n    const watchQueryOptions = this.createWatchQueryOptions(\n      this.queryHookOptions = options,\n    );\n\n    // Update this.watchQueryOptions, but only when they have changed, which\n    // allows us to depend on the referential stability of\n    // this.watchQueryOptions elsewhere.\n    const currentWatchQueryOptions = this.watchQueryOptions;\n\n    // To force this equality test to \"fail,\" thereby reliably triggering\n    // observable.reobserve, add any current WatchQueryOptions object(s) you\n    // want to be ignored to this.optionsToIgnoreOnce. A similar effect could be\n    // achieved by nullifying this.watchQueryOptions so the equality test\n    // immediately fails because currentWatchQueryOptions is null, but this way\n    // we can promise a truthy this.watchQueryOptions at all times.\n    if (\n      this.optionsToIgnoreOnce.has(currentWatchQueryOptions) ||\n      !equal(watchQueryOptions, currentWatchQueryOptions)\n    ) {\n      this.watchQueryOptions = watchQueryOptions;\n\n      if (currentWatchQueryOptions && this.observable) {\n        // As advertised in the -Once of this.optionsToIgnoreOnce, this trick is\n        // only good for one forced execution of observable.reobserve per\n        // ignored WatchQueryOptions object, though it is unlikely we will ever\n        // see this exact currentWatchQueryOptions object again here, since we\n        // just replaced this.watchQueryOptions with watchQueryOptions.\n        this.optionsToIgnoreOnce.delete(currentWatchQueryOptions);\n\n        // Though it might be tempting to postpone this reobserve call to the\n        // useEffect block, we need getCurrentResult to return an appropriate\n        // loading:true result synchronously (later within the same call to\n        // useQuery). Since we already have this.observable here (not true for\n        // the very first call to useQuery), we are not initiating any new\n        // subscriptions, though it does feel less than ideal that reobserve\n        // (potentially) kicks off a network request (for example, when the\n        // variables have changed), which is technically a side-effect.\n        this.observable.reobserve(this.getObsQueryOptions());\n\n        // Make sure getCurrentResult returns a fresh ApolloQueryResult<TData>,\n        // but save the current data as this.previousData, just like setResult\n        // usually does.\n        this.previousData = this.result?.data || this.previousData;\n        this.result = void 0;\n      }\n    }\n\n    // Make sure state.onCompleted and state.onError always reflect the latest\n    // options.onCompleted and options.onError callbacks provided to useQuery,\n    // since those functions are often recreated every time useQuery is called.\n    // Like the forceUpdate method, the versions of these methods inherited from\n    // InternalState.prototype are empty no-ops, but we can override them on the\n    // base state object (without modifying the prototype).\n    this.onCompleted = options.onCompleted || InternalState.prototype.onCompleted;\n    this.onError = options.onError || InternalState.prototype.onError;\n\n    if (\n      (this.renderPromises || this.client.disableNetworkFetches) &&\n      this.queryHookOptions.ssr === false &&\n      !this.queryHookOptions.skip\n    ) {\n      // If SSR has been explicitly disabled, and this function has been called\n      // on the server side, return the default loading state.\n      this.result = this.ssrDisabledResult;\n    } else if (\n      this.queryHookOptions.skip ||\n      this.watchQueryOptions.fetchPolicy === 'standby'\n    ) {\n      // When skipping a query (ie. we're not querying for data but still want to\n      // render children), make sure the `data` is cleared out and `loading` is\n      // set to `false` (since we aren't loading anything).\n      //\n      // NOTE: We no longer think this is the correct behavior. Skipping should\n      // not automatically set `data` to `undefined`, but instead leave the\n      // previous data in place. In other words, skipping should not mandate that\n      // previously received data is all of a sudden removed. Unfortunately,\n      // changing this is breaking, so we'll have to wait until Apollo Client 4.0\n      // to address this.\n      this.result = this.skipStandbyResult;\n    } else if (\n      this.result === this.ssrDisabledResult ||\n      this.result === this.skipStandbyResult\n    ) {\n      this.result = void 0;\n    }\n  }\n\n  private getObsQueryOptions(): WatchQueryOptions<TVariables, TData> {\n    const toMerge: Array<\n      Partial<WatchQueryOptions<TVariables, TData>>\n    > = [];\n\n    const globalDefaults = this.client.defaultOptions.watchQuery;\n    if (globalDefaults) toMerge.push(globalDefaults);\n\n    if (this.queryHookOptions.defaultOptions) {\n      toMerge.push(this.queryHookOptions.defaultOptions);\n    }\n\n    // We use compact rather than mergeOptions for this part of the merge,\n    // because we want watchQueryOptions.variables (if defined) to replace\n    // this.observable.options.variables whole. This replacement allows\n    // removing variables by removing them from the variables input to\n    // useQuery. If the variables were always merged together (rather than\n    // replaced), there would be no way to remove existing variables.\n    // However, the variables from options.defaultOptions and globalDefaults\n    // (if provided) should be merged, to ensure individual defaulted\n    // variables always have values, if not otherwise defined in\n    // observable.options or watchQueryOptions.\n    toMerge.push(compact(\n      this.observable && this.observable.options,\n      this.watchQueryOptions,\n    ));\n\n    return toMerge.reduce(\n      mergeOptions\n    ) as WatchQueryOptions<TVariables, TData>;\n  }\n\n  private ssrDisabledResult = maybeDeepFreeze({\n    loading: true,\n    data: void 0 as unknown as TData,\n    error: void 0,\n    networkStatus: NetworkStatus.loading,\n  });\n\n  private skipStandbyResult = maybeDeepFreeze({\n    loading: false,\n    data: void 0 as unknown as TData,\n    error: void 0,\n    networkStatus: NetworkStatus.ready,\n  });\n\n  // A function to massage options before passing them to ObservableQuery.\n  private createWatchQueryOptions({\n    skip,\n    ssr,\n    onCompleted,\n    onError,\n    defaultOptions,\n    // The above options are useQuery-specific, so this ...otherOptions spread\n    // makes otherOptions almost a WatchQueryOptions object, except for the\n    // query property that we add below.\n    ...otherOptions\n  }: QueryHookOptions<TData, TVariables> = {}): WatchQueryOptions<TVariables, TData> {\n    // This Object.assign is safe because otherOptions is a fresh ...rest object\n    // that did not exist until just now, so modifications are still allowed.\n    const watchQueryOptions: WatchQueryOptions<TVariables, TData> =\n      Object.assign(otherOptions, { query: this.query });\n\n    if (\n      this.renderPromises &&\n      (\n        watchQueryOptions.fetchPolicy === 'network-only' ||\n        watchQueryOptions.fetchPolicy === 'cache-and-network'\n      )\n    ) {\n      // this behavior was added to react-apollo without explanation in this PR\n      // https://github.com/apollographql/react-apollo/pull/1579\n      watchQueryOptions.fetchPolicy = 'cache-first';\n    }\n\n    if (!watchQueryOptions.variables) {\n      watchQueryOptions.variables = {} as TVariables;\n    }\n\n    if (skip) {\n      const {\n        fetchPolicy = this.getDefaultFetchPolicy(),\n        initialFetchPolicy = fetchPolicy,\n      } = watchQueryOptions;\n\n      // When skipping, we set watchQueryOptions.fetchPolicy initially to\n      // \"standby\", but we also need/want to preserve the initial non-standby\n      // fetchPolicy that would have been used if not skipping.\n      Object.assign(watchQueryOptions, {\n        initialFetchPolicy,\n        fetchPolicy: 'standby',\n      });\n    } else if (!watchQueryOptions.fetchPolicy) {\n      watchQueryOptions.fetchPolicy =\n        this.observable?.options.initialFetchPolicy ||\n        this.getDefaultFetchPolicy();\n    }\n\n    return watchQueryOptions;\n  }\n\n  getDefaultFetchPolicy(): WatchQueryFetchPolicy {\n    return (\n      this.queryHookOptions.defaultOptions?.fetchPolicy ||\n      this.client.defaultOptions.watchQuery?.fetchPolicy ||\n      \"cache-first\"\n    );\n  }\n\n  // Defining these methods as no-ops on the prototype allows us to call\n  // state.onCompleted and/or state.onError without worrying about whether a\n  // callback was provided.\n  private onCompleted(data: TData) {}\n  private onError(error: ApolloError) {}\n\n  private observable: ObservableQuery<TData, TVariables>;\n  private obsQueryFields: Omit<\n    ObservableQueryFields<TData, TVariables>,\n    \"variables\"\n  >;\n\n  private useObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    const obsQuery = this.observable =\n      this.renderPromises\n        && this.renderPromises.getSSRObservable(this.watchQueryOptions)\n        || this.observable // Reuse this.observable if possible (and not SSR)\n        || this.client.watchQuery(this.getObsQueryOptions());\n\n    this.obsQueryFields = useMemo(() => ({\n      refetch: obsQuery.refetch.bind(obsQuery),\n      reobserve: obsQuery.reobserve.bind(obsQuery),\n      fetchMore: obsQuery.fetchMore.bind(obsQuery),\n      updateQuery: obsQuery.updateQuery.bind(obsQuery),\n      startPolling: obsQuery.startPolling.bind(obsQuery),\n      stopPolling: obsQuery.stopPolling.bind(obsQuery),\n      subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n    }), [obsQuery]);\n\n    const ssrAllowed = !(\n      this.queryHookOptions.ssr === false ||\n      this.queryHookOptions.skip\n    );\n\n    if (this.renderPromises && ssrAllowed) {\n      this.renderPromises.registerSSRObservable(obsQuery);\n\n      if (obsQuery.getCurrentResult().loading) {\n        // TODO: This is a legacy API which could probably be cleaned up\n        this.renderPromises.addObservableQueryPromise(obsQuery);\n      }\n    }\n\n    return obsQuery;\n  }\n\n  // These members are populated by getCurrentResult and setResult, and it's\n  // okay/normal for them to be initially undefined.\n  private result: undefined | ApolloQueryResult<TData>;\n  private previousData: undefined | TData;\n\n  private setResult(nextResult: ApolloQueryResult<TData>) {\n    const previousResult = this.result;\n    if (previousResult && previousResult.data) {\n      this.previousData = previousResult.data;\n    }\n    this.result = nextResult;\n    // Calling state.setResult always triggers an update, though some call sites\n    // perform additional equality checks before committing to an update.\n    this.forceUpdate();\n    this.handleErrorOrCompleted(nextResult);\n  }\n\n  private handleErrorOrCompleted(result: ApolloQueryResult<TData>) {\n    if (!result.loading) {\n      // wait a tick in case we are in the middle of rendering a component\n      Promise.resolve().then(() => {\n        if (result.error) {\n          this.onError(result.error);\n        } else if (result.data) {\n          this.onCompleted(result.data);\n        }\n      }).catch(error => {\n        invariant.warn(error);\n      });\n    }\n  }\n\n  private getCurrentResult(): ApolloQueryResult<TData> {\n    // Using this.result as a cache ensures getCurrentResult continues returning\n    // the same (===) result object, unless state.setResult has been called, or\n    // we're doing server rendering and therefore override the result below.\n    if (!this.result) {\n      this.handleErrorOrCompleted(\n        this.result = this.observable.getCurrentResult()\n      );\n    }\n    return this.result;\n  }\n\n  // This cache allows the referential stability of this.result (as returned by\n  // getCurrentResult) to translate into referential stability of the resulting\n  // QueryResult object returned by toQueryResult.\n  private toQueryResultCache = new (canUseWeakMap ? WeakMap : Map)<\n    ApolloQueryResult<TData>,\n    QueryResult<TData, TVariables>\n  >();\n\n  toQueryResult(\n    result: ApolloQueryResult<TData>,\n  ): QueryResult<TData, TVariables> {\n    let queryResult = this.toQueryResultCache.get(result);\n    if (queryResult) return queryResult;\n\n    const { data, partial, ...resultWithoutPartial } = result;\n    this.toQueryResultCache.set(result, queryResult = {\n      data, // Ensure always defined, even if result.data is missing.\n      ...resultWithoutPartial,\n      ...this.obsQueryFields,\n      client: this.client,\n      observable: this.observable,\n      variables: this.observable.variables,\n      called: !this.queryHookOptions.skip,\n      previousData: this.previousData,\n    });\n\n    if (!queryResult.error && isNonEmptyArray(result.errors)) {\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      // TODO: Is it possible for both result.error and result.errors to be\n      // defined here?\n      queryResult.error = new ApolloError({ graphQLErrors: result.errors });\n    }\n\n    return queryResult;\n  }\n\n  private unsafeHandlePartialRefetch(result: ApolloQueryResult<TData>) {\n    // WARNING: SIDE-EFFECTS IN THE RENDER FUNCTION\n    //\n    // TODO: This code should be removed when the partialRefetch option is\n    // removed. I was unable to get this hook to behave reasonably in certain\n    // edge cases when this block was put in an effect.\n    if (\n      result.partial &&\n      this.queryHookOptions.partialRefetch &&\n      !result.loading &&\n      (!result.data || Object.keys(result.data).length === 0) &&\n      this.observable.options.fetchPolicy !== 'cache-only'\n    ) {\n      Object.assign(result, {\n        loading: true,\n        networkStatus: NetworkStatus.refetch,\n      });\n      this.observable.refetch();\n    }\n  }\n}\n"],"names":["CREATE_PRODUCT","gql","UPDATE_PRODUCT","REMOVE_PRODUCT","LOAD_CATEGORY","LOAD_CATEGORIES","LOAD_PRODUCT_DETAILS","updateLoading","removeLoading","stock","handleIncreaseStock","handleDecreaseStock","handleRemoveProduct","Stack","direction","spacing","IconButton","color","component","onClick","AddCircleOutline","Typography","sx","textAlign","variant","disabled","RemoveCircleOutline","Button","mt","name","categoryId","useParams","navigate","useNavigate","marginTop","marginBottom","justifyContent","ArrowBack","description","price","Item","label","value","gutterBottom","useState","product","setProduct","productId","useQuery","variables","id","error","loading","data","refetch","useEffect","Product","useMutation","refetchQueries","query","updateProduct","removeProduct","updateProductId","removeProductId","category_id","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","mutation","options","client","useApolloClient","verifyDocumentType","DocumentType","called","setResult","ref","useRef","mutationId","isMounted","assign","current","execute","useCallback","executeOptions","baseOptions","ignoreResults","clientOptions","mergeOptions","mutate","response","errors","ApolloError","graphQLErrors","result_1","equal","onCompleted","catch","result_2","onError","didWarnUncachedGetSnapshot","useSyncExternalStore","React","subscribe","getSnapshot","getServerSnapshot","__DEV__","invariant","inst","forceUpdate","canUseLayoutEffect","checkIfSnapshotChanged","_a","stateRef","InternalState","setTick","tick","useInternalState","previous","asyncResolveFns","Set","optionsToIgnoreOnce","canUseWeakSet","WeakSet","ssrDisabledResult","maybeDeepFreeze","networkStatus","NetworkStatus","skipStandbyResult","toQueryResultCache","canUseWeakMap","WeakMap","Map","previousResult","previousData","_this","add","watchQueryOptions","renderPromises","useContext","getApolloContext","useOptions","obsQuery","useObservableQuery","onNext","getCurrentResult","subscription","last","unsubscribe","resetLastResults","disableNetworkFetches","unsafeHandlePartialRefetch","queryResult","toQueryResult","size","clear","createWatchQueryOptions","queryHookOptions","currentWatchQueryOptions","has","observable","delete","reobserve","getObsQueryOptions","ssr","skip","fetchPolicy","toMerge","globalDefaults","defaultOptions","watchQuery","compact","reduce","otherOptions","getDefaultFetchPolicy","_d","initialFetchPolicy","getSSRObservable","obsQueryFields","useMemo","bind","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","ssrAllowed","registerSSRObservable","addObservableQueryPromise","nextResult","handleErrorOrCompleted","get","resultWithoutPartial","set","isNonEmptyArray","partial","partialRefetch"],"sourceRoot":""}