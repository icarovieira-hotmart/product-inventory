{"version":3,"file":"static/js/261.6c705d02.chunk.js","mappings":"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","sources":["../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","../node_modules/@mui/material/ButtonBase/Ripple.js","../node_modules/@mui/material/ButtonBase/touchRippleClasses.js","../node_modules/@mui/material/ButtonBase/TouchRipple.js","../node_modules/@mui/material/ButtonBase/buttonBaseClasses.js","../node_modules/@mui/material/ButtonBase/ButtonBase.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/material/utils/useEventCallback.js","../node_modules/@mui/material/utils/useForkRef.js","../node_modules/@mui/utils/esm/useIsFocusVisible.js","../node_modules/@mui/material/utils/useIsFocusVisible.js","../node_modules/@mui/utils/esm/setRef.js","../node_modules/@mui/utils/esm/useEnhancedEffect.js","../node_modules/@mui/utils/esm/useEventCallback.js","../node_modules/@mui/utils/esm/useForkRef.js","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs","../node_modules/graphql-tag/src/index.ts","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@apollo/src/react/hooks/useApolloClient.ts","../node_modules/@apollo/src/react/parser/index.ts"],"sourcesContent":["import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction Ripple(props) {\n  const {\n    className,\n    classes,\n    pulsate = false,\n    rippleX,\n    rippleY,\n    rippleSize,\n    in: inProp,\n    onExited,\n    timeout\n  } = props;\n  const [leaving, setLeaving] = React.useState(false);\n  const rippleClassName = clsx(className, classes.ripple, classes.rippleVisible, pulsate && classes.ripplePulsate);\n  const rippleStyles = {\n    width: rippleSize,\n    height: rippleSize,\n    top: -(rippleSize / 2) + rippleY,\n    left: -(rippleSize / 2) + rippleX\n  };\n  const childClassName = clsx(classes.child, leaving && classes.childLeaving, pulsate && classes.childPulsate);\n  if (!inProp && !leaving) {\n    setLeaving(true);\n  }\n  React.useEffect(() => {\n    if (!inProp && onExited != null) {\n      // react-transition-group#onExited\n      const timeoutId = setTimeout(onExited, timeout);\n      return () => {\n        clearTimeout(timeoutId);\n      };\n    }\n    return undefined;\n  }, [onExited, inProp, timeout]);\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: rippleClassName,\n    style: rippleStyles,\n    children: /*#__PURE__*/_jsx(\"span\", {\n      className: childClassName\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? Ripple.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore - injected from TransitionGroup\n   */\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the ripple pulsates, typically indicating the keyboard focus state of an element.\n   */\n  pulsate: PropTypes.bool,\n  /**\n   * Diameter of the ripple.\n   */\n  rippleSize: PropTypes.number,\n  /**\n   * Horizontal position of the ripple center.\n   */\n  rippleX: PropTypes.number,\n  /**\n   * Vertical position of the ripple center.\n   */\n  rippleY: PropTypes.number,\n  /**\n   * exit delay\n   */\n  timeout: PropTypes.number.isRequired\n} : void 0;\nexport default Ripple;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTouchRippleUtilityClass(slot) {\n  return generateUtilityClass('MuiTouchRipple', slot);\n}\nconst touchRippleClasses = generateUtilityClasses('MuiTouchRipple', ['root', 'ripple', 'rippleVisible', 'ripplePulsate', 'child', 'childLeaving', 'childPulsate']);\nexport default touchRippleClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"center\", \"classes\", \"className\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport { keyframes } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Ripple from './Ripple';\nimport touchRippleClasses from './touchRippleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`));\nconst exitKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`));\nconst pulsateKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`));\nexport const TouchRippleRoot = styled('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root'\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n});\n\n// This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\nexport const TouchRippleRipple = styled(Ripple, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})(_t4 || (_t4 = _`\n  opacity: 0;\n  position: absolute;\n\n  &.${0} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  &.${0} {\n    animation-duration: ${0}ms;\n  }\n\n  & .${0} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${0} {\n    opacity: 0;\n    animation-name: ${0};\n    animation-duration: ${0}ms;\n    animation-timing-function: ${0};\n  }\n\n  & .${0} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${0};\n    animation-duration: 2500ms;\n    animation-timing-function: ${0};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`), touchRippleClasses.rippleVisible, enterKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.ripplePulsate, ({\n  theme\n}) => theme.transitions.duration.shorter, touchRippleClasses.child, touchRippleClasses.childLeaving, exitKeyframe, DURATION, ({\n  theme\n}) => theme.transitions.easing.easeInOut, touchRippleClasses.childPulsate, pulsateKeyframe, ({\n  theme\n}) => theme.transitions.easing.easeInOut);\n\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n  const {\n      center: centerProp = false,\n      classes = {},\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]);\n\n  // Used to filter out mouse emulated events on mobile.\n  const ignoringMouseDown = React.useRef(false);\n  // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n  const startTimer = React.useRef(null);\n\n  // This is the hook called once the previous timeout is ready.\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/_jsx(TouchRippleRipple, {\n      classes: {\n        ripple: clsx(classes.ripple, touchRippleClasses.ripple),\n        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses.ripplePulsate),\n        child: clsx(classes.child, touchRippleClasses.child),\n        childLeaving: clsx(classes.childLeaving, touchRippleClasses.childLeaving),\n        childPulsate: clsx(classes.childPulsate, touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb = () => {}) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n    } = options;\n    if ((event == null ? void 0 : event.type) === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n    if ((event == null ? void 0 : event.type) === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    };\n\n    // Get the size of the ripple\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);\n\n      // For some reason the animation is broken on Mobile Chrome if the size is even.\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    }\n\n    // Touche devices\n    if (event != null && event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        };\n        // Delay the execution of the ripple effect.\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current);\n\n    // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n    if ((event == null ? void 0 : event.type) === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/_jsx(TouchRippleRoot, _extends({\n    className: clsx(touchRippleClasses.root, classes.root, className),\n    ref: container\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default TouchRipple;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getButtonBaseUtilityClass(slot) {\n  return generateUtilityClass('MuiButtonBase', slot);\n}\nconst buttonBaseClasses = generateUtilityClasses('MuiButtonBase', ['root', 'disabled', 'focusVisible']);\nexport default buttonBaseClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"action\", \"centerRipple\", \"children\", \"className\", \"component\", \"disabled\", \"disableRipple\", \"disableTouchRipple\", \"focusRipple\", \"focusVisibleClassName\", \"LinkComponent\", \"onBlur\", \"onClick\", \"onContextMenu\", \"onDragLeave\", \"onFocus\", \"onFocusVisible\", \"onKeyDown\", \"onKeyUp\", \"onMouseDown\", \"onMouseLeave\", \"onMouseUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"tabIndex\", \"TouchRippleProps\", \"touchRippleRef\", \"type\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef, refType } from '@mui/utils';\nimport composeClasses from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport TouchRipple from './TouchRipple';\nimport buttonBaseClasses, { getButtonBaseUtilityClass } from './buttonBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    focusVisible,\n    focusVisibleClassName,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  const composedClasses = composeClasses(slots, getButtonBaseUtilityClass, classes);\n  if (focusVisible && focusVisibleClassName) {\n    composedClasses.root += ` ${focusVisibleClassName}`;\n  }\n  return composedClasses;\n};\nexport const ButtonBaseRoot = styled('button', {\n  name: 'MuiButtonBase',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'relative',\n  boxSizing: 'border-box',\n  WebkitTapHighlightColor: 'transparent',\n  backgroundColor: 'transparent',\n  // Reset default value\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0,\n  border: 0,\n  margin: 0,\n  // Remove the margin in Safari\n  borderRadius: 0,\n  padding: 0,\n  // Remove the padding in Firefox\n  cursor: 'pointer',\n  userSelect: 'none',\n  verticalAlign: 'middle',\n  MozAppearance: 'none',\n  // Reset\n  WebkitAppearance: 'none',\n  // Reset\n  textDecoration: 'none',\n  // So we take precedent over the style of a native <a /> element.\n  color: 'inherit',\n  '&::-moz-focus-inner': {\n    borderStyle: 'none' // Remove Firefox dotted outline.\n  },\n\n  [`&.${buttonBaseClasses.disabled}`]: {\n    pointerEvents: 'none',\n    // Disable link interactions\n    cursor: 'default'\n  },\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n});\n\n/**\n * `ButtonBase` contains as few styles as possible.\n * It aims to be a simple building block for creating a button.\n * It contains a load of style reset and some focus/ripple logic.\n */\nconst ButtonBase = /*#__PURE__*/React.forwardRef(function ButtonBase(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiButtonBase'\n  });\n  const {\n      action,\n      centerRipple = false,\n      children,\n      className,\n      component = 'button',\n      disabled = false,\n      disableRipple = false,\n      disableTouchRipple = false,\n      focusRipple = false,\n      LinkComponent = 'a',\n      onBlur,\n      onClick,\n      onContextMenu,\n      onDragLeave,\n      onFocus,\n      onFocusVisible,\n      onKeyDown,\n      onKeyUp,\n      onMouseDown,\n      onMouseLeave,\n      onMouseUp,\n      onTouchEnd,\n      onTouchMove,\n      onTouchStart,\n      tabIndex = 0,\n      TouchRippleProps,\n      touchRippleRef,\n      type\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const buttonRef = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRippleRef = useForkRef(rippleRef, touchRippleRef);\n  const {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  React.useImperativeHandle(action, () => ({\n    focusVisible: () => {\n      setFocusVisible(true);\n      buttonRef.current.focus();\n    }\n  }), []);\n  const [mountedState, setMountedState] = React.useState(false);\n  React.useEffect(() => {\n    setMountedState(true);\n  }, []);\n  const enableTouchRipple = mountedState && !disableRipple && !disabled;\n  React.useEffect(() => {\n    if (focusVisible && focusRipple && !disableRipple && mountedState) {\n      rippleRef.current.pulsate();\n    }\n  }, [disableRipple, focusRipple, focusVisible, mountedState]);\n  function useRippleHandler(rippleAction, eventCallback, skipRippleAction = disableTouchRipple) {\n    return useEventCallback(event => {\n      if (eventCallback) {\n        eventCallback(event);\n      }\n      const ignore = skipRippleAction;\n      if (!ignore && rippleRef.current) {\n        rippleRef.current[rippleAction](event);\n      }\n      return true;\n    });\n  }\n  const handleMouseDown = useRippleHandler('start', onMouseDown);\n  const handleContextMenu = useRippleHandler('stop', onContextMenu);\n  const handleDragLeave = useRippleHandler('stop', onDragLeave);\n  const handleMouseUp = useRippleHandler('stop', onMouseUp);\n  const handleMouseLeave = useRippleHandler('stop', event => {\n    if (focusVisible) {\n      event.preventDefault();\n    }\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n  });\n  const handleTouchStart = useRippleHandler('start', onTouchStart);\n  const handleTouchEnd = useRippleHandler('stop', onTouchEnd);\n  const handleTouchMove = useRippleHandler('stop', onTouchMove);\n  const handleBlur = useRippleHandler('stop', event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  }, false);\n  const handleFocus = useEventCallback(event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!buttonRef.current) {\n      buttonRef.current = event.currentTarget;\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n      if (onFocusVisible) {\n        onFocusVisible(event);\n      }\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  });\n  const isNonNativeButton = () => {\n    const button = buttonRef.current;\n    return component && component !== 'button' && !(button.tagName === 'A' && button.href);\n  };\n\n  /**\n   * IE11 shim for https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat\n   */\n  const keydownRef = React.useRef(false);\n  const handleKeyDown = useEventCallback(event => {\n    // Check if key is already down to avoid repeats being counted as multiple activations\n    if (focusRipple && !keydownRef.current && focusVisible && rippleRef.current && event.key === ' ') {\n      keydownRef.current = true;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.start(event);\n      });\n    }\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === ' ') {\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (event.target === event.currentTarget && isNonNativeButton() && event.key === 'Enter' && !disabled) {\n      event.preventDefault();\n      if (onClick) {\n        onClick(event);\n      }\n    }\n  });\n  const handleKeyUp = useEventCallback(event => {\n    // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n    // https://codesandbox.io/s/button-keyup-preventdefault-dn7f0\n    if (focusRipple && event.key === ' ' && rippleRef.current && focusVisible && !event.defaultPrevented) {\n      keydownRef.current = false;\n      rippleRef.current.stop(event, () => {\n        rippleRef.current.pulsate(event);\n      });\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n\n    // Keyboard accessibility for non interactive elements\n    if (onClick && event.target === event.currentTarget && isNonNativeButton() && event.key === ' ' && !event.defaultPrevented) {\n      onClick(event);\n    }\n  });\n  let ComponentProp = component;\n  if (ComponentProp === 'button' && (other.href || other.to)) {\n    ComponentProp = LinkComponent;\n  }\n  const buttonProps = {};\n  if (ComponentProp === 'button') {\n    buttonProps.type = type === undefined ? 'button' : type;\n    buttonProps.disabled = disabled;\n  } else {\n    if (!other.href && !other.to) {\n      buttonProps.role = 'button';\n    }\n    if (disabled) {\n      buttonProps['aria-disabled'] = disabled;\n    }\n  }\n  const handleRef = useForkRef(ref, focusVisibleRef, buttonRef);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (enableTouchRipple && !rippleRef.current) {\n        console.error(['MUI: The `component` prop provided to ButtonBase is invalid.', 'Please make sure the children prop is rendered in this custom component.'].join('\\n'));\n      }\n    }, [enableTouchRipple]);\n  }\n  const ownerState = _extends({}, props, {\n    centerRipple,\n    component,\n    disabled,\n    disableRipple,\n    disableTouchRipple,\n    focusRipple,\n    tabIndex,\n    focusVisible\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(ButtonBaseRoot, _extends({\n    as: ComponentProp,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    onBlur: handleBlur,\n    onClick: onClick,\n    onContextMenu: handleContextMenu,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    onMouseDown: handleMouseDown,\n    onMouseLeave: handleMouseLeave,\n    onMouseUp: handleMouseUp,\n    onDragLeave: handleDragLeave,\n    onTouchEnd: handleTouchEnd,\n    onTouchMove: handleTouchMove,\n    onTouchStart: handleTouchStart,\n    ref: handleRef,\n    tabIndex: disabled ? -1 : tabIndex,\n    type: type\n  }, buttonProps, other, {\n    children: [children, enableTouchRipple ?\n    /*#__PURE__*/\n    /* TouchRipple is only needed client-side, x2 boost on the server. */\n    _jsx(TouchRipple, _extends({\n      ref: handleRippleRef,\n      center: centerRipple\n    }, TouchRippleProps)) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonBase.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * A ref for imperative actions.\n   * It currently only supports `focusVisible()` action.\n   */\n  action: refType,\n  /**\n   * If `true`, the ripples are centered.\n   * They won't start at the cursor interaction position.\n   * @default false\n   */\n  centerRipple: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the touch ripple effect is disabled.\n   * @default false\n   */\n  disableTouchRipple: PropTypes.bool,\n  /**\n   * If `true`, the base button will have a keyboard focus ripple.\n   * @default false\n   */\n  focusRipple: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  href: PropTypes /* @typescript-to-proptypes-ignore */.any,\n  /**\n   * The component used to render a link when the `href` prop is provided.\n   * @default 'a'\n   */\n  LinkComponent: PropTypes.elementType,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onContextMenu: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onDragLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component is focused with a keyboard.\n   * We trigger a `onFocus` callback too.\n   */\n  onFocusVisible: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseUp: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchEnd: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchMove: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onTouchStart: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * Props applied to the `TouchRipple` element.\n   */\n  TouchRippleProps: PropTypes.object,\n  /**\n   * A ref that points to the `TouchRipple` element.\n   */\n  touchRippleRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      pulsate: PropTypes.func.isRequired,\n      start: PropTypes.func.isRequired,\n      stop: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string])\n} : void 0;\nexport default ButtonBase;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","import { unstable_useEventCallback as useEventCallback } from '@mui/utils';\nexport default useEventCallback;","import { unstable_useForkRef as useForkRef } from '@mui/utils';\nexport default useForkRef;","// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nlet hadKeyboardEvent = true;\nlet hadFocusVisibleRecently = false;\nlet hadFocusVisibleRecentlyTimeout;\nconst inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @returns {boolean}\n */\nfunction focusTriggersKeyboardModality(node) {\n  const {\n    type,\n    tagName\n  } = node;\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n  if (node.isContentEditable) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  hadKeyboardEvent = true;\n}\n\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\nfunction isFocusVisible(event) {\n  const {\n    target\n  } = event;\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {\n    // Browsers not implementing :focus-visible will throw a SyntaxError.\n    // We use our own heuristic for those browsers.\n    // Rethrow might be better if it's not the expected error but do we really\n    // want to crash if focus-visible malfunctioned?\n  }\n\n  // No need for validFocusTarget check. The user does that by attaching it to\n  // focusable events only.\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\nexport default function useIsFocusVisible() {\n  const ref = React.useCallback(node => {\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n  const isFocusVisibleRef = React.useRef(false);\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleBlurVisible() {\n    // checking against potential state variable does not suffice if we focus and blur synchronously.\n    // React wouldn't have time to trigger a re-render so `focusVisible` would be stale.\n    // Ideally we would adjust `isFocusVisible(event)` to look at `relatedTarget` for blur events.\n    // This doesn't work in IE11 due to https://github.com/facebook/react/issues/3751\n    // TODO: check again if React releases their internal changes to focus event handling (https://github.com/facebook/react/pull/19186).\n    if (isFocusVisibleRef.current) {\n      // To detect a tab/window switch, we look for a blur event followed\n      // rapidly by a visibility change.\n      // If we don't see a visibility change within 100ms, it's probably a\n      // regular focus change.\n      hadFocusVisibleRecently = true;\n      window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n      hadFocusVisibleRecentlyTimeout = window.setTimeout(() => {\n        hadFocusVisibleRecently = false;\n      }, 100);\n      isFocusVisibleRef.current = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Should be called if a blur event is fired\n   */\n  function handleFocusVisible(event) {\n    if (isFocusVisible(event)) {\n      isFocusVisibleRef.current = true;\n      return true;\n    }\n    return false;\n  }\n  return {\n    isFocusVisibleRef,\n    onFocus: handleFocusVisible,\n    onBlur: handleBlurVisible,\n    ref\n  };\n}","import { unstable_useIsFocusVisible as useIsFocusVisible } from '@mui/utils';\nexport default useIsFocusVisible;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import * as React from 'react';\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nexport default useEnhancedEffect;","import * as React from 'react';\nimport useEnhancedEffect from './useEnhancedEffect';\n\n/**\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport default function useEventCallback(fn) {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useCallback((...args) =>\n  // @ts-expect-error hide `this`\n  // tslint:disable-next-line:ban-comma-operator\n  (0, ref.current)(...args), []);\n}","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","import { parse } from 'graphql';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  Location,\n} from 'graphql/language/ast';\n\n// A map docString -> graphql document\nconst docCache = new Map<string, DocumentNode>();\n\n// A map fragmentName -> [normalized source]\nconst fragmentSourceMap = new Map<string, Set<string>>();\n\nlet printFragmentWarnings = true;\nlet experimentalFragmentVariables = false;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string: string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\nfunction cacheKeyFromLoc(loc: Location) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nfunction processFragments(ast: DocumentNode) {\n  const seenKeys = new Set<string>();\n  const definitions: DefinitionNode[] = [];\n\n  ast.definitions.forEach(fragmentDefinition => {\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc!);\n\n      // We know something about this fragment\n      let sourceKeySet = fragmentSourceMap.get(fragmentName)!;\n      if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n      } else if (!sourceKeySet) {\n        fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n      }\n\n      sourceKeySet.add(sourceKey);\n\n      if (!seenKeys.has(sourceKey)) {\n        seenKeys.add(sourceKey);\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  });\n\n  return {\n    ...ast,\n    definitions,\n  };\n}\n\nfunction stripLoc(doc: DocumentNode) {\n  const workSet = new Set<Record<string, any>>(doc.definitions);\n\n  workSet.forEach(node => {\n    if (node.loc) delete node.loc;\n    Object.keys(node).forEach(key => {\n      const value = node[key];\n      if (value && typeof value === 'object') {\n        workSet.add(value);\n      }\n    });\n  });\n\n  const loc = doc.loc as Record<string, any>;\n  if (loc) {\n    delete loc.startToken;\n    delete loc.endToken;\n  }\n\n  return doc;\n}\n\nfunction parseDocument(source: string) {\n  var cacheKey = normalize(source);\n  if (!docCache.has(cacheKey)) {\n    const parsed = parse(source, {\n      experimentalFragmentVariables,\n      allowLegacyFragmentVariables: experimentalFragmentVariables,\n    } as any);\n    if (!parsed || parsed.kind !== 'Document') {\n      throw new Error('Not a valid GraphQL document.');\n    }\n    docCache.set(\n      cacheKey,\n      // check that all \"new\" fragments inside the documents are consistent with\n      // existing fragments of the same name\n      stripLoc(processFragments(parsed)),\n    );\n  }\n  return docCache.get(cacheKey)!;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nexport function gql(\n  literals: string | readonly string[],\n  ...args: any[]\n) {\n\n  if (typeof literals === 'string') {\n    literals = [literals];\n  }\n\n  let result = literals[0];\n\n  args.forEach((arg, i) => {\n    if (arg && arg.kind === 'Document') {\n      result += arg.loc.source.body;\n    } else {\n      result += arg;\n    }\n    result += literals[i + 1];\n  });\n\n  return parseDocument(result);\n}\n\nexport function resetCaches() {\n  docCache.clear();\n  fragmentSourceMap.clear();\n}\n\nexport function disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nexport function enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nexport function disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\nconst extras = {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n};\n\nexport namespace gql {\n  export const {\n    gql,\n    resetCaches,\n    disableFragmentWarnings,\n    enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables,\n  } = extras;\n}\n\ngql.default = gql;\n\nexport default gql;\n","import React from 'react';\nexport default React.createContext(null);","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import { invariant } from '../../utilities/globals';\nimport { useContext } from 'react';\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useApolloClient(\n  override?: ApolloClient<object>,\n): ApolloClient<object> {\n  const context = useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n    'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n    'instance in via options.',\n  );\n\n  return client;\n}\n","import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to safety check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments: DefinitionNode[] = []\n  const queries: DefinitionNode[] = []\n  const mutations: DefinitionNode[] = []\n  const subscriptions: DefinitionNode[] = []\n\n  for (const x of document.definitions) {\n    if (x.kind === 'FragmentDefinition') {\n      fragments.push(x);\n      continue\n    }\n\n    if (x.kind === 'OperationDefinition') {\n      switch (x.operation) {\n        case 'query':\n          queries.push(x);\n          break;\n        case 'mutation':\n          mutations.push(x);\n          break;\n        case 'subscription':\n          subscriptions.push(x);\n          break;\n      }\n    }\n  }\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n\nexport function verifyDocumentType(document: DocumentNode, type: DocumentType) {\n  const operation = parser(document);\n  const requiredOperationName = operationName(type);\n  const usedOperationName = operationName(operation.type);\n  invariant(\n    operation.type === type,\n    `Running a ${requiredOperationName} requires a graphql ` +\n      `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n  );\n}\n\n"],"names":["getChildMapping","children","mapFn","result","Object","create","Children","c","forEach","child","key","isValidElement","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","i","nextKeysPending","pendingKeys","prevKey","length","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","bind","exit","enter","values","obj","map","k","TransitionGroup","_React$Component","context","_this","handleExited","call","this","_assertThisInitialized","state","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","_extends","render","_this$props","Component","component","childFactory","_objectWithoutPropertiesLoose","React","TransitionGroupContext","value","propTypes","defaultProps","className","classes","pulsate","rippleX","rippleY","rippleSize","inProp","timeout","leaving","setLeaving","rippleClassName","clsx","ripple","rippleVisible","ripplePulsate","rippleStyles","width","height","top","left","childClassName","childLeaving","childPulsate","timeoutId","setTimeout","clearTimeout","_jsx","style","_t","_t2","_t3","_t4","generateUtilityClasses","_excluded","enterKeyframe","keyframes","exitKeyframe","pulsateKeyframe","TouchRippleRoot","styled","name","slot","overflow","pointerEvents","position","zIndex","right","bottom","borderRadius","TouchRippleRipple","Ripple","touchRippleClasses","theme","transitions","easing","easeInOut","duration","shorter","TouchRipple","inProps","ref","useThemeProps","center","centerProp","other","ripples","setRipples","rippleCallback","current","ignoringMouseDown","startTimer","startTimerCommit","container","startCommit","params","cb","oldRipples","start","event","options","fakeElement","type","element","rect","getBoundingClientRect","undefined","clientX","clientY","touches","Math","round","sqrt","sizeX","max","abs","clientWidth","sizeY","clientHeight","stop","slice","root","getButtonBaseUtilityClass","generateUtilityClass","ButtonBaseRoot","overridesResolver","styles","display","alignItems","justifyContent","boxSizing","WebkitTapHighlightColor","backgroundColor","outline","border","margin","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","textDecoration","color","borderStyle","buttonBaseClasses","colorAdjust","ButtonBase","action","centerRipple","disabled","disableRipple","disableTouchRipple","focusRipple","LinkComponent","onBlur","onClick","onContextMenu","onDragLeave","onFocus","onFocusVisible","onKeyDown","onKeyUp","onMouseDown","onMouseLeave","onMouseUp","onTouchEnd","onTouchMove","onTouchStart","tabIndex","TouchRippleProps","touchRippleRef","buttonRef","rippleRef","handleRippleRef","useForkRef","useIsFocusVisible","isFocusVisibleRef","handleFocusVisible","handleBlurVisible","focusVisibleRef","focusVisible","setFocusVisible","focus","mountedState","setMountedState","enableTouchRipple","useRippleHandler","rippleAction","eventCallback","skipRippleAction","useEventCallback","handleMouseDown","handleContextMenu","handleDragLeave","handleMouseUp","handleMouseLeave","preventDefault","handleTouchStart","handleTouchEnd","handleTouchMove","handleBlur","handleFocus","currentTarget","isNonNativeButton","button","tagName","href","keydownRef","handleKeyDown","target","handleKeyUp","defaultPrevented","ComponentProp","to","buttonProps","role","handleRef","ownerState","focusVisibleClassName","slots","composedClasses","composeClasses","useUtilityClasses","_jsxs","as","getTypographyUtilityClass","TypographyRoot","variant","align","capitalize","noWrap","gutterBottom","paragraph","typography","textAlign","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","themeProps","transformDeprecatedColors","extendSxProp","variantMapping","hadFocusVisibleRecentlyTimeout","hadKeyboardEvent","hadFocusVisibleRecently","inputTypesWhitelist","text","search","url","tel","email","password","number","date","month","week","time","datetime","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","visibilityState","isFocusVisible","matches","readOnly","isContentEditable","focusTriggersKeyboardModality","doc","ownerDocument","addEventListener","window","setRef","useEnhancedEffect","fn","refs","every","instance","isObjectLike","invariant","condition","message","Boolean","Error","LineRegExp","getLocation","source","lastLineStart","line","body","matchAll","match","index","column","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","padStart","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","split","locationLine","subLineIndex","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","padLen","prefix","join","toNormalizedOptions","args","firstArg","nodes","positions","path","originalError","extensions","GraphQLError","_this$nodes","_nodeLocations$","rawArgs","undefinedIfEmpty","Array","isArray","nodeLocations","loc","locations","pos","originalExtensions","defineProperties","writable","enumerable","stack","defineProperty","configurable","captureStackTrace","output","formattedError","Symbol","toStringTag","array","syntaxError","description","DirectiveLocation","TokenKind","Lexer","startOfFileToken","Token","lastToken","token","lineStart","lookahead","kind","nextToken","readNextToken","end","isUnicodeScalarValue","code","isSupplementaryCodePoint","isLeadingSurrogate","charCodeAt","isTrailingSurrogate","printCodePointAt","lexer","codePointAt","char","String","fromCodePoint","toString","toUpperCase","createToken","col","bodyLength","readComment","readBlockString","readString","isDigit","readNumber","isNameStart","readName","firstCode","isFloat","readDigits","chunkStart","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","size","point","readHexDigit","read16BitHexCode","trailingCode","currentLine","blockLines","dedentBlockStringLines","isNameContinue","Parser","sourceObj","isSource","Source","_lexer","_options","_tokenCounter","expectToken","Kind","definitions","many","parseDefinition","peek","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","unexpected","operation","OperationTypeNode","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseName","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","parseTypeReference","defaultValue","expectOptionalToken","parseConstValueLiteral","parseConstDirectives","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","arguments","parseArguments","isConst","item","parseConstArgument","parseArgument","parseValueLiteral","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","allowLegacyFragmentVariables","parseList","parseObject","advanceLexer","parseStringLiteral","varName","block","any","fields","parseObjectField","parseDirective","innerType","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","delimitedMany","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","types","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseEnumValueName","getTokenDesc","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","hasOwnProperty","startToken","noLocation","Location","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","maxTokens","advance","isPunctuatorTokenKind","docCache","Map","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","normalize","string","replace","trim","processFragments","ast","seenKeys","Set","fragmentDefinition","fragmentName","sourceKey","substring","sourceKeySet","get","has","console","warn","set","add","parseDocument","cacheKey","parsed","parse","workSet","endToken","stripLoc","gql","literals","_i","arg","gql_1","extras","clear","subClass","superClass","constructor","useApolloClient","override","useContext","getApolloContext","client","__DEV__","DocumentType","cache","operationName","Query","Mutation","Subscription","verifyDocumentType","document","variables","cached","fragments","queries","mutations","subscriptions","_a","x","definition","requiredOperationName"],"sourceRoot":""}